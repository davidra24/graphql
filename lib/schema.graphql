#ID -> Escalar de tipo ID
type Course {
  _id: ID!
  title: String!
  teacher: String
  description: String!
  topic: String
  people: [Student]
}

type Student {
  _id: ID!
  name: String!
  email: String!
}

type Query {
  #"Devuelve todos los cursos"
  getCourses: [Course]
  #"Devuelve un curso" ! -> Campo obligatorio
  getCourse(id: ID!): Course
  #"Devuelve todos los estudiantes"
  getStudents: [Student]
  #"Devuelve un estudiante" ! -> Campo obligatorio
  getStundent(id: ID!): String
}

input CourseInput {
  title: String!
  teacher: String
  description: String!
  topic: String
}

input CourseEditInput {
  title: String
  teacher: String
  description: String
  topic: String
}

input StudentInput {
  name: String!
  email: String!
}
input StudentEditInput {
  name: String
  email: String
}

type Mutation {
  #"Crea un curso"
  createCourse(input: CourseInput!): Course
  #"Edita un curso"
  editCourse(id: ID!, input: CourseEditInput!): Course
  #"Eliminar un curso"
  deleteCourse(id: ID!): Boolean
  #"Crea un estudiante"
  createStudent(input: StudentInput!): Student
  #"Edita un estudiante"
  editStudent(id: ID!, input: StudentEditInput!): Student
  #"Eliminar un estudiante"
  deleteStudent(id: ID!): Boolean
  #"Agrega una persona a un curso"
  addPeople(courseID: ID!, personID: ID!): Course
}
